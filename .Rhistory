vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes$adj.P.Val, xlab="FDR", main="")
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
hist(top_genes$adj.P.Val, xlab="FDR", main="")
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
# hist(top_genes$adj.P.Val, xlab="FDR", main="")
hist(top_genes$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
dev.off()
return(list(top_genes, vGene, eBGene))
}
## Plots for DE genes
plots_DE<-function(top_genes, vGene) {
## Define FDR threshold for significance
FDR=0.05
## NS/Down/Upregulated genes
DE<-vector()
for (i in 1:dim(top_genes)[1]) {
if (top_genes$adj.P.Val[i]>FDR) {
DE<-append(DE, "ns")
}
else {
if (top_genes$logFC[i]>0) {
DE<-append(DE, "Up")
}
else {
DE<-append(DE, "Down")
}
}
}
top_genes$DE<- DE
## Gene symbols for DEG with |logFC|>1
DEG_symbol<-vector()
for (i in 1:dim(top_genes)[1]) {
if (top_genes$DE[i]!="ns" & abs(top_genes$logFC[i])>1) {
DEG_symbol<-append(DEG_symbol, top_genes$Symbol[i])
}
else {
DEG_symbol<-append(DEG_symbol, NA)
}
}
top_genes$DEG_symbol<- DEG_symbol
## MA plot for DE genes
cols <- c("Up" = "firebrick2", "Down" = "steelblue2", "ns" = "grey")
sizes <- c("Up" = 2, "Down" = 2, "ns" = 1)
alphas <- c("Up" = 1, "Down" = 1, "ns" = 0.5)
top_genes$mean_log_expr<-apply(vGene$E, 1, mean)
p1<-ggplot(data = top_genes,
aes(x = mean_log_expr,y = logFC,
fill = DE,
size = DE,
alpha = DE)) +
geom_point(shape = 21,
colour = "black") +
scale_fill_manual(values = cols) +
scale_size_manual(values = sizes) +
scale_alpha_manual(values = alphas) +
labs(x="Mean of normalized counts")
## Volcano plot for DE genes
p2<-ggplot(data = top_genes,
aes(x = logFC,y = -log10(adj.P.Val),
fill = DE,
size = DE,
alpha = DE,
label= DEG_symbol)) +
geom_point(shape = 21) +
geom_hline(yintercept = -log10(FDR),
linetype = "dashed") +
geom_vline(xintercept = c(-1,1),
linetype = "dashed") +
geom_label_repel(fill="white", size=2, max.overlaps = Inf,
box.padding = 0.2,
show.legend=FALSE) +
labs(y="-log10(FDR)")+
scale_fill_manual(values = cols) +
scale_size_manual(values = sizes) +
scale_alpha_manual(values = alphas)
plot_grid(p1, p2, ncol=2)
}
## Boxplot of a single gene
DE_one_boxplot <- function (top_genes, vGene, DEgene){
## q-value for the gene
q_value<-signif(top_genes[which(top_genes$Symbol==DEgene), "adj.P.Val"], digits = 3)
## Regress out residuals to remove batch effects
vGene$E<-cleaningY(vGene$E, model, P=2)
## Order genes by q-value
top_genes<-top_genes[order(top_genes$adj.P.Val),]
lognorm_DE<-vGene$E[rownames(de_genes),]
## Samples as rows and genes as columns
lognorm_DE<-t(lognorm_DE)
colnames(lognorm_DE)<-rowData(RSE)[rownames(de_genes),"Symbol"]
## Add samples' Group information
lognorm_DE<-data.frame(lognorm_DE, "Group"=colData(RSE)$Group)
DEgene<-chartr(":", ".",DEgene)
ggplot(data=as.data.frame(lognorm_DE),
aes(x=Group,y=eval(parse_expr(DEgene)))) +
## Hide outliers
geom_boxplot(outlier.color = "#FFFFFFFF") +
## Samples colored by Group + noise
geom_jitter(aes(colour=Group),shape=16,
position=position_jitter(0.2)) +
theme_classic() +
labs(x = "Group", y = "norm counts",
title = DEgene,
subtitle = paste("FDR:", q_value)) +
theme(plot.margin=unit (c (1,1.5,1,1), 'cm'), legend.position = "none",
plot.title = element_text(hjust=0.5, size=10, face="bold"),
plot.subtitle = element_text(size = 9))
}
## Boxplot of lognorm counts for top 3 DE genes
## Obtain lognorm counts of DE genes
DE_boxplots <- function(RSE, vGene, model, de_genes){
## Regress out residuals to remove batch effects
vGene$E<-cleaningY(vGene$E, model, P=2)
## Order genes by q-value
de_genes<-de_genes[order(de_genes$adj.P.Val),]
lognorm_DE<-vGene$E[rownames(de_genes),]
## Samples as rows and genes as columns
lognorm_DE<-t(lognorm_DE)
colnames(lognorm_DE)<-rowData(RSE)[rownames(de_genes),"Symbol"]
## Add samples' Group information
lognorm_DE<-data.frame(lognorm_DE, "Group"=colData(RSE)$Group)
plots<-list()
for (i in 1:3){
DEgene<-colnames(lognorm_DE)[i]
p<-DE_one_boxplot(de_genes, lognorm_DE, DEgene)
plots[[i]]<-p
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol = 3)
ggsave(here(paste("plots/04_DEA/01_Modeling/Gene_analysis/DE_boxplots_",name, ".pdf", sep="")),
width = 25, height = 10, units = "cm")
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
# hist(top_genes$adj.P.Val, xlab="FDR", main="")
# hist(top_genes$adj.P.Val, xlab="FDR", main="")
hist(top_genes$adj.P.Val, xlab="FDR", main="")
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
hist(top_genes$adj.P.Val, xlab="FDR", main="")
rse_gene_adults_qc
rse_gene_pups_qc
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
#par(mfrow=c(2,2))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2), mar=c(0.5,1,0.5,1)
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2), mar=c(0.5,1,0.5,1))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2), mar=c(1,2,1,2))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2), mar=c(2,2,2,2))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2), mar=c(3,4,3,4))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for nicotine vs ctrls
DEA_expt_vs_ctl<- function(age, formula){
RSE <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
par(mfrow=c(2,2), mar=c(4,6,4,6))
## Model matrix
model=model.matrix(formula, data=colData(RSE))
## Comparison of interest
coef = "GroupExperimental"
## Transform counts to log2(CPM)
## Estimate mean-variance relationship for each gene
## Compute weights for limma
vGene = voom(assay(RSE), design=model, plot=TRUE)
## Fit linear model for each gene to estimate logFCs
fitGene = lmFit(vGene)
## Compute empirical Bayes statistics
eBGene = eBayes(fitGene)
## Plot average log expression vs log2FC
limma::plotMA(eBGene, coef = coef, xlab = "Mean of normalized counts",
ylab="log2FC")
## Plot -log(p-value) vs log2FC
volcanoplot(eBGene, coef = coef)
## Rank genes by logFC for Group (nicotine vs ctrl)
top_genes = topTable(eBGene, coef=coef, p.value = 1, number=nrow(RSE), sort.by="none")
## Histogram of adjusted p-values
hist(top_genes$adj.P.Val, xlab="Adjusted p-value", main="")
#dev.off()
return(list(top_genes, vGene, eBGene))
}
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
#hist(top_genes_adults$adj.P.Val, xlab="FDR", main="")
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
## DEA for adults
formula<- ~ Group + Pregnancy + flowcell + overallMapRate + totalAssignedGene + rRNA_rate + detected + ERCCsumLogErr
results_adults <- DEA_expt_vs_ctl('adults', formula)
top_genes_adults <- results_adults[[1]]
vGene_adults <- results_adults[[2]]
eBGene_adults <- results_adults[[3]]
## Number of DEGs
length(which(top_genes_adults$adj.P.Val<0.05))
length(which(top_genes_adults$adj.P.Val<0.1))
length(which(top_genes_adults$adj.P.Val<0.4))
## DEA for pups
formula<- ~ Group + Sex + flowcell + mitoRate + overallMapRate + totalAssignedGene + detected + ERCCsumLogErr
results_pups <- DEA_expt_vs_ctl('pups', formula)
top_genes_pups <- results_pups[[1]]
vGene_pups <- results_pups[[2]]
eBGene_pups <- results_pups[[3]]
## Number of DEGs (FDR<0.05)
length(which(top_genes_adults$adj.P.Val<0.05))
## DEA for pups
formula<- ~ Group + Sex + flowcell + mitoRate + overallMapRate + totalAssignedGene + detected + ERCCsumLogErr
results_pups <- DEA_expt_vs_ctl('pups', formula)
top_genes_pups <- results_pups[[1]]
vGene_pups <- results_pups[[2]]
eBGene_pups <- results_pups[[3]]
## Number of DEGs (FDR<0.05)
length(which(top_genes_pups$adj.P.Val<0.05))
