version
version
version
Citep(bib[["SPEAQeasy"]])
library("RefManageR")
install.packages("RefManager")
install.packages("RefManagerR")
library("RefManageR")
Citep(bib[["SPEAQeasy"]])
library(RefManageR)
install.packages("remotes")
remotes::install_github("ropensci/RefManageR")
library(RefManageR)
library( BiocStyle)
library("RefManageR")
## Write bibliography information
bib <- c(
R = citation(),
BiocStyle = citation("BiocStyle")[1],
dplyr = citation("dplyr")[1],
knitr = citation("knitr")[1],
rmarkdown = citation("rmarkdown")[1],
sessioninfo = citation("sessioninfo")[1],
SPEAQeasyWorkshop2020 = citation("SPEAQeasyWorkshop2020")[1],
SPEAQeasy = citation("SPEAQeasyWorkshop2020")[2],
clusterProfiler = citation("clusterProfiler"),
edgeR = citation("edgeR"),
here = citation("here"),
jaffelab = citation("jaffelab"),
limma = citation("limma"),
org.Hs.eg.db = citation("org.Hs.eg.db"),
pheatmap = citation("pheatmap"),
R = citation(),
RColorBrewer = citation("RColorBrewer"),
rmarkdown = citation("rmarkdown"),
recount = citation("recount"),
RefManageR = citation("RefManageR")[1],
SummarizedExperiment = citation("SummarizedExperiment"),
tidyr = citation("tidyr")[1],
VariantAnnotation = citation("VariantAnnotation")[1],
voom = RefManageR::BibEntry(
"article",
key = "voom",
author = "CW Law and Y Chen and W Shi and GK Smyth",
year = "2014",
title = "Voom: precision weights unlock linear model analysis tools for RNA-seq read counts",
journal = "Genome Biology",
volume = "15",
pages = "R29"
)
)
install.packages(BiocStyle)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocStyle")
library( BiocStyle)
library(dplyr)
install.packages("dplyr")
install.packages(sessioninfo)
library(sessioninfo)
install.packages(utils)
install.packages("sessioninfo")
install.packages("SPEAQeasy")
install.packages("clusterProfiler")
install.packages("here")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("here")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("here", force = TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("jaffelab")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pheatmap", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("jaffelab", force=TRUE)
install.packages('rmarkdown')
install.packages("rmarkdown")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RefManageR", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SummarizedExperimen", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("voom", force=TRUE)
Citep(bib[["SPEAQeasy"]])
Citep(bib[["SPEAQeasy"]])
library("RefManageR")
## Write bibliography information
bib <- c(
R = citation(),
BiocStyle = citation("BiocStyle")[1],
dplyr = citation("dplyr")[1],
knitr = citation("knitr")[1],
rmarkdown = citation("rmarkdown")[1],
sessioninfo = citation("sessioninfo")[1],
clusterProfiler = citation("clusterProfiler"),
edgeR = citation("edgeR"),
here = citation("here"),
# jaffelab = citation("jaffelab"),
limma = citation("limma"),
org.Hs.eg.db = citation("org.Hs.eg.db"),
pheatmap = citation("pheatmap"),
rmarkdown = citation("rmarkdown"),
RefManageR = citation("RefManageR")[1],
SummarizedExperiment = citation("SummarizedExperiment"),
voom = RefManageR::BibEntry(
"article",
key = "voom",
author = "CW Law and Y Chen and W Shi and GK Smyth",
year = "2014",
title = "Voom: precision weights unlock linear model analysis tools for RNA-seq read counts",
journal = "Genome Biology",
volume = "15",
pages = "R29"
)
)
Citep(bib[["SPEAQeasy"]])
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SPEAQeasyWorkshop2020", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SPEAQeasy", force=TRUE)
citation("SummarizedExperiment")
library('smokingMouse')
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse")
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse", version = 3.16)
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse", version = 3.17)
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse")
library('smokingMouse')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("smokingMouse")
BiocManager::install("smokingMouse")
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse")
"synapter" %in% rownames(available.packages())
"smokingMouse" %in% rownames(available.packages())
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SPEAQeasyWorkshop2020", force=TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SPEAQeasyWorkshop2020", force=TRUE)
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
install.packages("remotes")
remotes::install_github("LieberInstitute/jaffelab")
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/SPEAQeasyWorkshop2020')
install.packages("remotes")
remotes::install_github("LieberInstitute/jaffelab")
install.packages("remotes")
citation("SPEAQeasyWorkshop2020")
citation("SPEAQeasyWorkshop2020")[1]
citation("SPEAQeasyWorkshop2020")[2]
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse")
BiocManager::install("LieberInstitute/smokingMouse")
library(smoking mouse)
library(smokingMouse)
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse")
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("smokingMouse", force = TRUE)
#  Install 'remotes' if needed, then the package for this workshop
if (!requireNamespace('BiocManager')) {
install.packages('BiocManager')
}
BiocManager::install('LieberInstitute/smokingMouse')
library(smokingMouse)
load(here('provisional_data/rse_gene_mouse_RNAseq_nic-smo.Rdata'))
library(here)
load(here('provisional_data/rse_gene_mouse_RNAseq_nic-smo.Rdata'))
colData(rse_gene)
library(SummarizedExperiment)
colData(rse_gene)
colData(rse_gene)[which(rse_gene$Age=='Adult'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Group=='Expt'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Group=='Control'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Pregnancy=='Yes'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Pregnancy=='No'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Group=='Control'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Group=='Experimental'),]
colData(rse_gene)[which(rse_gene$Age=='Pup' & rse_gene$Expt=='Nicotine'),]
colData(rse_gene)[which(rse_gene$Age=='Pup' & rse_gene$Expt=='Nicotine' & rse_gene$Group=='Control'),]
colData(rse_gene)[which(rse_gene$Age=='Pup' & rse_gene$Expt=='Nicotine' & rse_gene$Group=='Experimental'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Pregnancy=='Yes' & rse_gene$Group=='Control'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Pregnancy=='Yes' & rse_gene$Group=='Experimental'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Pregnancy=='No' & rse_gene$Group=='Experimental'),]
colData(rse_gene)[which(rse_gene$Age=='Adult' & rse_gene$Expt=='Nicotine' & rse_gene$Pregnancy=='No' & rse_gene$Group=='Control'),]
rse_gene
colData(rse_gene)[which(rse_gene$Expt=='Nicotine'),]
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("RangedSummarizedExperiment", force = TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocPkgTools")
citation("BiocPkgTools")
rowData(rse_gene)
head(colData(rse_gene))
rse_gene_nic[which(rse_gene$Tissue=='Nicotine'),]
rse_gene_nic <- rse_gene[which(rse_gene$Tissue=='Nicotine'),]
rse_gene_nic
rse_gene_nic <- rse_gene[,which(rse_gene$Tissue=='Nicotine')]
rse_gene_nic
rse_gene$Tissue=='Nicotine'
which(rse_gene$Tissue=='Nicotine')
which(rse_gene$Tissue=='nicotine')
rse_gene$Tissue
rse_gene_nic <- rse_gene[,which(rse_gene$Experiment=='Nicotine')]
rse_gene_nic
rse_gene_nic <- rse_gene[,which(rse_gene$Expt=='Nicotine')]
rse_gene_nic
dim(rse_gene_nic)
assays(rse_gene_nic)$counts[1:3,]
assays(rse_gene_nic)$logcounts[1:3,]
* <mark> <span style="font-family: monospace"> SAMPLE_ID </span> </mark>:
rse_gene$medium
sum(assay(rse_gene)[1,])
sum(assay(rse_gene)[1,])
assay(rse_gene)
assay(rse_gene)[1,]
assay(rse_gene)[344,]
rse_gene$sum[344,]
rse_gene$sum[344]
rse_gene$sum
sum(assay(rse_gene)[,1])
rse_gene$sum[1]
rse_gene$detected[1]
assay(rse_gene)[,1]
which(assay(rse_gene)[,1]!=0)
length(which(assay(rse_gene)[,1]!=0))
rse_gene$detected[1]
