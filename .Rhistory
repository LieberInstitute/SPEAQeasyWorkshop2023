theme_bw() +
guides(color="none") +
labs(title = gene_ids,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = sample_var) +
theme(axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
## Scatterplots for continuous variables
else {
colors <- c('mitoRate'='khaki3', 'overallMapRate'='turquoise', 'totalAssignedGene'='plum2', 'rRNA_rate'='orange3',
'sum'='palegreen3', 'detected'='skyblue2', 'ERCCsumLogErr'='slateblue1')
plot <- ggplot(as.data.frame(data), aes(x=eval(parse_expr(sample_var)), y=gene_expr)) +
geom_point( color=colors[[sample_var]], size=2) +
stat_smooth (geom="line", alpha=0.4, size=0.4, span=0.25, method = lm, color='orangered3') +
theme_bw() +
guides(color="none") +
labs(title = gene_ids,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = gsub('_', ' ', sample_var)) +
theme(plot.margin=unit (c (0.4,0.1,0.4,0.1), 'cm'),
axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
return(plot)
}
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (gene_id in affected_genes){
plots[[i]] <- plot_gene_expr(age, sample_var, gene_id)
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plot_gene_expr_sample('adults', 'detected')
age
age <- 'adults'
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Lognorm counts of the gene across samples
data <- colData(rse_gene)
gene_id <- 'ENSMUSG00000009731.4'
rowData(rse_gene)[which(rowData(rse_gene)$ensemblID==gene_id), 'Symbol']
rowData(rse_gene)
rowData(rse_gene)$Symbol
## 2.1 Examine expression of most affected genes by each sample variable
## Plot of gene expression lognorm counts vs. sample variable
plot_gene_expr <- function(age, sample_var, gene_id){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
colors <- list(
"Group" = c('Control'='brown2', 'Experimental'='deepskyblue3'),
"Age" = c('Adult'='slateblue3', 'Pup'='yellow3'),
"Sex" = c('F'='hotpink1', 'M'='dodgerblue'),
"Pregnancy" = c('Yes'='darkorchid3', 'No'='darkolivegreen4'),
"plate" = c('Plate1'='darkorange', 'Plate2'='lightskyblue', 'Plate3'='deeppink1'),
"flowcell" = c('HKCG7DSXX'='chartreuse2','HKCMHDSXX'='magenta', 'HKCNKDSXX'='turquoise3',
'HKCTMDSXX'='tomato')
)
## Lognorm counts of the gene across samples
data <- colData(rse_gene)
data$gene_expr <- assays(rse_gene)$logcounts[gene_id,]
## Percentage of variance explained by the variable
percentage <- signif(varPart_data[gene_id, sample_var], digits=3)
## Boxplots for discrete variables
if (class(data[,sample_var])=='chatacter') {
plot <- ggplot(data = as.data.frame(data), mapping = aes(x = !! rlang::sym(sample_var),
y = gene_expr, color = !! rlang::sym(sample_var))) +
geom_boxplot(size = 0.25, width=0.32, color='black', outlier.color = "#FFFFFFFF") +
geom_jitter( aes(shape=Batch_RNA_extraction), width = 0.15, alpha = 1, size = 1) +
stat_smooth (geom="line", alpha=0.6, size=0.4, span=0.3, method = lm, aes(group=1), color='orangered3') +
scale_color_manual(values = colors[[sample_var]]) +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = sample_var) +
theme(axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
## Scatterplots for continuous variables
else {
colors <- c('mitoRate'='khaki3', 'overallMapRate'='turquoise', 'totalAssignedGene'='plum2', 'rRNA_rate'='orange3',
'sum'='palegreen3', 'detected'='skyblue2', 'ERCCsumLogErr'='slateblue1')
plot <- ggplot(as.data.frame(data), aes(x=eval(parse_expr(sample_var)), y=gene_expr)) +
geom_point( color=colors[[sample_var]], size=2) +
stat_smooth (geom="line", alpha=0.4, size=0.4, span=0.25, method = lm, color='orangered3') +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = gsub('_', ' ', sample_var)) +
theme(plot.margin=unit (c (0.4,0.1,0.4,0.1), 'cm'),
axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
return(plot)
}
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (gene_id in affected_genes){
plots[[i]] <- plot_gene_expr(age, sample_var, gene_id)
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plot_gene_expr_sample('adults', 'detected')
sample_var <- 'detected'
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
affected_genes
length(affected_genes)
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, gene_id)
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plot_gene_expr_sample('adults', 'detected')
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, affected_genes[i])
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plot_gene_expr_sample('adults', 'detected')
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, affected_genes[i])
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plots <- plot_gene_expr_sample('adults', 'detected')
plots + theme(plot.margin=unit (c(1,2.5,1,2.5), 'cm'))
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, affected_genes[i])
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plots <- plot_gene_expr_sample('adults', 'detected')
plots + theme(plot.margin=unit (c(1,1,1,1), 'cm'))
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, affected_genes[i])
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plots <- plot_gene_expr_sample('adults', 'detected')
plots + theme(plot.margin=unit (c(2,1,2,1), 'cm'))
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by variable
affected_genes <- rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, affected_genes[i])
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
plots <- plot_gene_expr_sample('adults', 'detected')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Adults
## Top affected genes by 'detected'
plots <- plot_gene_expr_sample('adults', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
plots <- plot_gene_expr_sample('adults', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
plots <- plot_gene_expr_sample('adults', 'Group')
class(data[,'Group'])
## 2.1 Examine expression of most affected genes by each sample variable
## Plot of gene expression lognorm counts vs. sample variable
plot_gene_expr <- function(age, sample_var, gene_id){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
colors <- list(
"Group" = c('Control'='brown2', 'Experimental'='deepskyblue3'),
"Age" = c('Adult'='slateblue3', 'Pup'='yellow3'),
"Sex" = c('F'='hotpink1', 'M'='dodgerblue'),
"Pregnancy" = c('Yes'='darkorchid3', 'No'='darkolivegreen4'),
"plate" = c('Plate1'='darkorange', 'Plate2'='lightskyblue', 'Plate3'='deeppink1'),
"flowcell" = c('HKCG7DSXX'='chartreuse2','HKCMHDSXX'='magenta', 'HKCNKDSXX'='turquoise3',
'HKCTMDSXX'='tomato')
)
## Lognorm counts of the gene across samples
data <- colData(rse_gene)
data$gene_expr <- assays(rse_gene)$logcounts[gene_id,]
## Percentage of variance explained by the variable
percentage <- signif(varPart_data[gene_id, sample_var], digits=3)
## Boxplots for discrete variables
if (class(data[,sample_var])=='character') {
plot <- ggplot(data = as.data.frame(data), mapping = aes(x = !! rlang::sym(sample_var),
y = gene_expr, color = !! rlang::sym(sample_var))) +
geom_boxplot(size = 0.25, width=0.32, color='black', outlier.color = "#FFFFFFFF") +
geom_jitter( aes(shape=Batch_RNA_extraction), width = 0.15, alpha = 1, size = 1) +
stat_smooth (geom="line", alpha=0.6, size=0.4, span=0.3, method = lm, aes(group=1), color='orangered3') +
scale_color_manual(values = colors[[sample_var]]) +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = sample_var) +
theme(axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
## Scatterplots for continuous variables
else {
colors <- c('mitoRate'='khaki3', 'overallMapRate'='turquoise', 'totalAssignedGene'='plum2', 'rRNA_rate'='orange3',
'sum'='palegreen3', 'detected'='skyblue2', 'ERCCsumLogErr'='slateblue1')
plot <- ggplot(as.data.frame(data), aes(x=eval(parse_expr(sample_var)), y=gene_expr)) +
geom_point( color=colors[[sample_var]], size=2) +
stat_smooth (geom="line", alpha=0.4, size=0.4, span=0.25, method = lm, color='orangered3') +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = gsub('_', ' ', sample_var)) +
theme(plot.margin=unit (c (0.4,0.1,0.4,0.1), 'cm'),
axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
return(plot)
}
## Adults
## Top affected genes by 'detected'
plots <- plot_gene_expr_sample('adults', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
plots <- plot_gene_expr_sample('adults', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
plots <- plot_gene_expr_sample('adults', 'Group')
## 2.1 Examine expression of most affected genes by each sample variable
## Plot of gene expression lognorm counts vs. sample variable
plot_gene_expr <- function(age, sample_var, gene_id){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
colors <- list(
"Group" = c('Control'='brown2', 'Experimental'='deepskyblue3'),
"Age" = c('Adult'='slateblue3', 'Pup'='yellow3'),
"Sex" = c('F'='hotpink1', 'M'='dodgerblue'),
"Pregnancy" = c('Yes'='darkorchid3', 'No'='darkolivegreen4'),
"plate" = c('Plate1'='darkorange', 'Plate2'='lightskyblue', 'Plate3'='deeppink1'),
"flowcell" = c('HKCG7DSXX'='chartreuse2','HKCMHDSXX'='magenta', 'HKCNKDSXX'='turquoise3',
'HKCTMDSXX'='tomato')
)
## Lognorm counts of the gene across samples
data <- colData(rse_gene)
data$gene_expr <- assays(rse_gene)$logcounts[gene_id,]
## Percentage of variance explained by the variable
percentage <- signif(varPart_data[gene_id, sample_var], digits=3)
## Boxplots for discrete variables
if (class(data[,sample_var])=='character') {
plot <- ggplot(data = as.data.frame(data), mapping = aes(x = !! rlang::sym(sample_var),
y = gene_expr, color = !! rlang::sym(sample_var))) +
geom_boxplot(size = 0.25, width=0.32, color='black', outlier.color = "#FFFFFFFF") +
geom_jitter(width = 0.15, alpha = 1, size = 1) +
stat_smooth (geom="line", alpha=0.6, size=0.4, span=0.3, method = lm, aes(group=1), color='orangered3') +
scale_color_manual(values = colors[[sample_var]]) +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = sample_var) +
theme(axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
## Scatterplots for continuous variables
else {
colors <- c('mitoRate'='khaki3', 'overallMapRate'='turquoise', 'totalAssignedGene'='plum2', 'rRNA_rate'='orange3',
'sum'='palegreen3', 'detected'='skyblue2', 'ERCCsumLogErr'='slateblue1')
plot <- ggplot(as.data.frame(data), aes(x=eval(parse_expr(sample_var)), y=gene_expr)) +
geom_point( color=colors[[sample_var]], size=2) +
stat_smooth (geom="line", alpha=0.4, size=0.4, span=0.25, method = lm, color='orangered3') +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = gsub('_', ' ', sample_var)) +
theme(plot.margin=unit (c (0.4,0.1,0.4,0.1), 'cm'),
axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
return(plot)
}
## Adults
## Top affected genes by 'detected'
plots <- plot_gene_expr_sample('adults', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
plots <- plot_gene_expr_sample('adults', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
plots <- plot_gene_expr_sample('adults', 'Group')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Pup plots without sum, rRNA_rate and plate
formula <-  ~ (1|Group) + (1|Sex) + (1|flowcell) + mitoRate + overallMapRate + totalAssignedGene + detected + ERCCsumLogErr
varPart <- varPartAnalysis('pups', formula)
varPart_data_pups <- varPart[[2]]
plot <- varPart[[1]]
plot + theme(plot.margin=unit (c(1,1,1,1), 'cm'),
axis.text.x = element_text(size = (7)),
axis.text.y = element_text(size = (7.5)))
## Pups
## Plots for top affected genes by 'overallMapRate'
plots <- plot_gene_expr_sample('pups', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'totalAssignedGene'
plots <- plot_gene_expr_sample('pups', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'Group'
plots <- plot_gene_expr_sample('pups', 'Group')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
age
age <- 'pups'
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
sample_var <- 'Group'
varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),]
rownames(varPart_data_adults[order(varPart_data_adults[,sample_var], decreasing =  TRUE),][1:3,])
## Function to plot gene expression vs sample variable data for top 3 most affected genes
plot_gene_expr_sample <- function(age, sample_var){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
## Top 3 genes most affected by sample variable
affected_genes <- rownames(varPart_data[order(varPart_data[,sample_var], decreasing =  TRUE),][1:3,])
## Plots
plots <- list()
for (i in 1:length(affected_genes)){
plots[[i]] <- plot_gene_expr(age, sample_var, affected_genes[i])
}
plot_grid(plots[[1]], plots[[2]], plots[[3]], ncol=3)
}
## Adults
## Plots for top affected genes by 'totalAssignedGene'
plots <- plot_gene_expr_sample('adults', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'overallMapRate'
plots <- plot_gene_expr_sample('adults', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'Group'
plots <- plot_gene_expr_sample('adults', 'Group')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Pups
## Plots for top affected genes by 'overallMapRate'
plots <- plot_gene_expr_sample('pups', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'totalAssignedGene'
plots <- plot_gene_expr_sample('pups', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'Group'
plots <- plot_gene_expr_sample('pups', 'Group')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## 2.1 Examine expression of most affected genes by each sample variable
## Plot of gene expression lognorm counts vs. sample variable
plot_gene_expr <- function(age, sample_var, gene_id){
rse_gene <- eval(parse_expr(paste("rse_gene", age, 'qc', sep="_")))
varPart_data <- eval(parse_expr(paste0('varPart_data_', age)))
colors <- list(
"Group" = c('Control'='brown2', 'Experimental'='deepskyblue3'),
"Age" = c('Adult'='slateblue3', 'Pup'='yellow3'),
"Sex" = c('F'='hotpink1', 'M'='dodgerblue'),
"Pregnancy" = c('Yes'='darkorchid3', 'No'='darkolivegreen4'),
"plate" = c('Plate1'='darkorange', 'Plate2'='lightskyblue', 'Plate3'='deeppink1'),
"flowcell" = c('HKCG7DSXX'='chartreuse2','HKCMHDSXX'='magenta', 'HKCNKDSXX'='turquoise3',
'HKCTMDSXX'='tomato')
)
## Lognorm counts of the gene across samples
data <- colData(rse_gene)
data$gene_expr <- assays(rse_gene)$logcounts[gene_id,]
## Percentage of variance explained by the variable
percentage <- 100*signif(varPart_data[gene_id, sample_var], digits=3)
## Boxplots for discrete variables
if (class(data[,sample_var])=='character') {
plot <- ggplot(data = as.data.frame(data), mapping = aes(x = !! rlang::sym(sample_var),
y = gene_expr, color = !! rlang::sym(sample_var))) +
geom_boxplot(size = 0.25, width=0.32, color='black', outlier.color = "#FFFFFFFF") +
geom_jitter(width = 0.15, alpha = 1, size = 1) +
stat_smooth (geom="line", alpha=0.6, size=0.4, span=0.3, method = lm, aes(group=1), color='orangered3') +
scale_color_manual(values = colors[[sample_var]]) +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = sample_var) +
theme(axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
## Scatterplots for continuous variables
else {
colors <- c('mitoRate'='khaki3', 'overallMapRate'='turquoise', 'totalAssignedGene'='plum2', 'rRNA_rate'='orange3',
'sum'='palegreen3', 'detected'='skyblue2', 'ERCCsumLogErr'='slateblue1')
plot <- ggplot(as.data.frame(data), aes(x=eval(parse_expr(sample_var)), y=gene_expr)) +
geom_point( color=colors[[sample_var]], size=2) +
stat_smooth (geom="line", alpha=0.4, size=0.4, span=0.25, method = lm, color='orangered3') +
theme_bw() +
guides(color="none") +
labs(title = gene_id,
subtitle = paste0("Variance explained: ", percentage, '%'),
y= 'lognorm counts', x = gsub('_', ' ', sample_var)) +
theme(plot.margin=unit (c (0.4,0.1,0.4,0.1), 'cm'),
axis.title = element_text(size = (7)),
axis.text = element_text(size = (6)),
plot.title = element_text(hjust=0.5, size=7.5, face="bold"),
plot.subtitle = element_text(size = 7, color='gray40'),
legend.text = element_text(size=6),
legend.title = element_text(size=7))
}
return(plot)
}
## Adults
## Plots for top affected genes by 'totalAssignedGene'
plots <- plot_gene_expr_sample('adults', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'overallMapRate'
plots <- plot_gene_expr_sample('adults', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'Group'
plots <- plot_gene_expr_sample('adults', 'Group')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Pups
## Plots for top affected genes by 'overallMapRate'
plots <- plot_gene_expr_sample('pups', 'overallMapRate')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'totalAssignedGene'
plots <- plot_gene_expr_sample('pups', 'totalAssignedGene')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
## Plots for top affected genes by 'Group'
plots <- plot_gene_expr_sample('pups', 'Group')
plots + theme(plot.margin=unit (c(3,1,2,3), 'cm'))
